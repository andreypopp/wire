'use strict'

define (require) ->

  {path, extend} = require('wire')

  module 'wire'

  test 'traverse object by path', ->
    o = {a: {b: {c: 1}}}
    deepEqual(path(o, 'a.b.c'), 1)
    deepEqual(path(o, 'a.b'), {c: 1})
    deepEqual(path(o, 'a'), {b: {c: 1}})
    deepEqual(path(o, ''), {a: {b: {c: 1}}})
    deepEqual(path(o), {a: {b: {c: 1}}})

    deepEqual(path(o, 'b'), undefined)
    deepEqual(path(o, 'b.c'), undefined)

    o = {a: [1, {b: 2}]}
    deepEqual(path(o, 'a'), [1, {b: 2}])
    deepEqual(path(o, 'a.0'), 1)
    deepEqual(path(o, 'a.1'), {b: 2})
    deepEqual(path(o, 'a.1.b'), 2)

  test 'extend object with mixins', ->
    window.o = o = {}
    extend(o, {a: 1}, {b: 2}, {c: 3, d: 4})
    equal(o.a, 1)
    equal(o.b, 2)
    equal(o.c, 3)
    equal(o.d, 4)
